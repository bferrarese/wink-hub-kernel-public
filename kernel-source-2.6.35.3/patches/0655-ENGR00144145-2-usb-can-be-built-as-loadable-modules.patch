From b6418a60e9c295a60d2ed3753ef7375c8418ba12 Mon Sep 17 00:00:00 2001
From: Peter Chen <peter.chen@freescale.com>
Date: Wed, 24 Aug 2011 15:10:06 +0800
Subject: [PATCH 655/670] ENGR00144145-2 usb: can be built as loadable modules

Driver part

Please follow below load sequence to use OTG

- fsl_otg_arc
- ehci-hcd
- arcotg_udc

Besides, in order to match i.mx53 release windows, it changes some
common code, there will be a better solution at 2.6.38 in future

Signed-off-by: Peter Chen <peter.chen@freescale.com>
---
 drivers/usb/core/driver.c   |  2 ++
 drivers/usb/host/ehci-arc.c | 47 ++++++++++++++++++++++++++++++++++++++++-----
 kernel/power/main.c         |  1 +
 3 files changed, 45 insertions(+), 5 deletions(-)

diff --git a/drivers/usb/core/driver.c b/drivers/usb/core/driver.c
index babc9a2..16f7fd3 100644
--- a/drivers/usb/core/driver.c
+++ b/drivers/usb/core/driver.c
@@ -1306,6 +1306,7 @@ int usb_suspend(struct device *dev, pm_message_t msg)
 	choose_wakeup(udev, msg);
 	return usb_suspend_both(udev, msg);
 }
+EXPORT_SYMBOL_GPL(usb_suspend);
 
 /* The device lock is held by the PM core */
 int usb_resume(struct device *dev, pm_message_t msg)
@@ -1341,6 +1342,7 @@ int usb_resume(struct device *dev, pm_message_t msg)
 		status = 0;
 	return status;
 }
+EXPORT_SYMBOL_GPL(usb_resume);
 
 #endif /* CONFIG_PM */
 
diff --git a/drivers/usb/host/ehci-arc.c b/drivers/usb/host/ehci-arc.c
index d3cbb9b8..c98acb4 100644
--- a/drivers/usb/host/ehci-arc.c
+++ b/drivers/usb/host/ehci-arc.c
@@ -134,6 +134,31 @@ void fsl_usb_recover_hcd(struct platform_device *pdev)
 }
 
 /**
+ * This irq is used to open the hw access and let usb_hcd_irq process the usb event
+ * ehci_fsl_pre_irq will be called before usb_hcd_irq
+ * The hcd operation need to be done during the wakeup irq
+ */
+static irqreturn_t ehci_fsl_pre_irq(int irq, void *dev)
+{
+	struct platform_device *pdev = (struct platform_device *)dev;
+	struct usb_hcd *hcd = platform_get_drvdata(pdev);
+	struct fsl_usb2_platform_data *pdata;
+
+	pdata = hcd->self.controller->platform_data;
+
+	if (!test_bit(HCD_FLAG_HW_ACCESSIBLE, &hcd->flags)) {
+		if (pdata->irq_delay || !pdata->wakeup_event)
+			return IRQ_NONE;
+
+		pr_debug("%s\n", __func__);
+		pdata->wakeup_event = 0;
+		fsl_usb_recover_hcd(pdev);
+		return IRQ_HANDLED;
+	}
+	return IRQ_NONE;
+}
+
+/**
  * usb_hcd_fsl_probe - initialize FSL-based HCDs
  * @drvier: Driver to be used for this HCD
  * @pdev: USB Host Controller being probed
@@ -221,10 +246,18 @@ int usb_hcd_fsl_probe(const struct hc_driver *driver,
 
 	fsl_platform_set_host_mode(hcd);
 	hcd->power_budget = pdata->power_budget;
+	/*
+	 * The ehci_fsl_pre_irq must be registered before usb_hcd_irq, in that case
+	 * it can be called before usb_hcd_irq when irq occurs
+	 */
+	retval = request_irq(irq, ehci_fsl_pre_irq, IRQF_SHARED,
+			"fsl ehci pre interrupt", (void *)pdev);
+	if (retval != 0)
+		goto err4;
 
 	retval = usb_add_hcd(hcd, irq, IRQF_DISABLED | IRQF_SHARED);
 	if (retval != 0)
-		goto err4;
+		goto err5;
 
 	if (pdata->operating_mode == FSL_USB2_DR_OTG) {
 		struct ehci_hcd *ehci = hcd_to_ehci(hcd);
@@ -237,7 +270,7 @@ int usb_hcd_fsl_probe(const struct hc_driver *driver,
 		if (!ehci->transceiver) {
 			printk(KERN_ERR "can't find transceiver\n");
 			retval = -ENODEV;
-			goto err5;
+			goto err6;
 		}
 
 		retval = otg_set_host(ehci->transceiver, &ehci_to_hcd(ehci)->self);
@@ -256,10 +289,12 @@ int usb_hcd_fsl_probe(const struct hc_driver *driver,
 	fsl_platform_set_ahb_burst(hcd);
 	ehci_testmode_init(hcd_to_ehci(hcd));
 	return retval;
-err5:
+err6:
 	usb_remove_hcd(hcd);
-err4:
+err5:
 	iounmap(hcd->regs);
+err4:
+	free_irq(irq, (void *)pdev);
 err3:
 	if (pdata->operating_mode != FSL_USB2_DR_OTG)
 		release_mem_region(hcd->rsrc_start, hcd->rsrc_len);
@@ -529,7 +564,9 @@ static int ehci_fsl_drv_remove(struct platform_device *pdev)
 {
 	struct usb_hcd *hcd = platform_get_drvdata(pdev);
 
-	/* FIXME we only want one one remove() not two */
+	/* free ehci_fsl_pre_irq first */
+	free_irq(hcd->irq, (void *)pdev);
+	/* FIXME we only want one remove() not two */
 	usb_hcd_fsl_remove(hcd, pdev);
 	return 0;
 }
diff --git a/kernel/power/main.c b/kernel/power/main.c
index bfb684a..f112911 100644
--- a/kernel/power/main.c
+++ b/kernel/power/main.c
@@ -16,6 +16,7 @@
 #include "power.h"
 
 DEFINE_MUTEX(pm_mutex);
+EXPORT_SYMBOL(pm_mutex);
 
 unsigned int pm_flags;
 EXPORT_SYMBOL(pm_flags);
-- 
1.8.0

