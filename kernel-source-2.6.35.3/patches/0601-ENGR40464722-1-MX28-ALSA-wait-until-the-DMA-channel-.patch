From d513aa738a50e1c54daee3f916e5b77f54200733 Mon Sep 17 00:00:00 2001
From: Huang Shijie <b32955@freescale.com>
Date: Thu, 21 Jun 2012 16:10:22 +0800
Subject: [PATCH 601/670] ENGR40464722-1 MX28 ALSA: wait until the DMA channel
 finishs

When we invoke mxs_pcm_close(), the DMA channel may still does
some DMA operations. We should wait for the DMA channel to finish
all the DMA operations. We have observed a gplay hang if we do not do this.

How the hang happen?
  [1] the DMA channel is not closed properly.
  [2] So the DMA is in a mess state, when we play video with gplay
      in the next time. The audio system does not work, which causes
      the video system does not work too, so the gplay hang.

How to close the DMA channel properly:
  [1] wait until the DMA channel finishs all the DMA operations.
  [2] do not reset the DMA channel here, it makes no sense.

Signed-off-by: Huang Shijie <b32955@freescale.com>
---
 sound/soc/mxs/mxs-pcm.c | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

diff --git a/sound/soc/mxs/mxs-pcm.c b/sound/soc/mxs/mxs-pcm.c
index bde32d6..41a7470 100644
--- a/sound/soc/mxs/mxs-pcm.c
+++ b/sound/soc/mxs/mxs-pcm.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2011 Freescale Semiconductor, Inc. All Rights Reserved.
+ * Copyright (C) 2011-2012 Freescale Semiconductor, Inc. All Rights Reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -371,14 +371,25 @@ static int mxs_pcm_close(struct snd_pcm_substream *substream)
 	struct mxs_runtime_data *prtd = runtime->private_data;
 	int desc_num = mxs_pcm_hardware.periods_max;
 	int desc;
+	int timeo = 20;
 
 	static LIST_HEAD(list);
 	mxs_dma_disable(prtd->dma_ch);
+
+	/* Wait until the DMA chain is finished. */
+	while (mxs_dma_read_semaphore(prtd->dma_ch)) {
+		if (!timeo--)
+			break;
+		pr_debug("The sema is not zero now\n");
+		msleep(10);
+	}
+	if (timeo <= 0)
+		pr_warn("Is the DMA channel dead?\n");
+
 	/* Free DMA irq */
 	free_irq(prtd->params->irq, substream);
 	mxs_dma_get_cooked(prtd->dma_ch, &list);
 	/* Free DMA channel*/
-	mxs_dma_reset(prtd->dma_ch);
 	for (desc = 0; desc < desc_num; desc++)
 		mxs_dma_free_desc(prtd->dma_desc_array[desc]);
 	mxs_dma_release(prtd->dma_ch, mxs_pcm_dev);
-- 
1.8.0

