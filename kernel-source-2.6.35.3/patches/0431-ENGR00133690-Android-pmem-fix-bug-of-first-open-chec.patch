From 61f9b474e76b9840e0ab6f1000b7fa1c09461827 Mon Sep 17 00:00:00 2001
From: Xinyu Chen <xinyu.chen@freescale.com>
Date: Fri, 5 Nov 2010 15:58:59 +0800
Subject: [PATCH 431/670] ENGR00133690 Android pmem: fix bug of first open
 check to pmem device

Due to the change: d405640539555b601e52f7d18f1f0b1345d18bf5,
the file->private_data is no longer initialized to NULL.
But assigned to miscdevice structure.

Signed-off-by: Xinyu Chen <xinyu.chen@freescale.com>
---
 drivers/misc/pmem.c | 13 +++++--------
 1 file changed, 5 insertions(+), 8 deletions(-)

diff --git a/drivers/misc/pmem.c b/drivers/misc/pmem.c
index b2b6186..0e1651d 100644
--- a/drivers/misc/pmem.c
+++ b/drivers/misc/pmem.c
@@ -337,8 +337,10 @@ static int pmem_open(struct inode *inode, struct file *file)
 	DLOG("current %u file %p(%d)\n", current->pid, file, file_count(file));
 	/* setup file->private_data to indicate its unmapped */
 	/*  you can only open a pmem device one time */
-	if (file->private_data != NULL)
+	if (file->private_data != &pmem[id].dev &&
+		file->private_data != NULL) {
 		return -1;
+	}
 	data = kmalloc(sizeof(struct pmem_data), GFP_KERNEL);
 	if (!data) {
 		printk("pmem: unable to allocate memory for pmem metadata.");
@@ -442,10 +444,12 @@ static int pmem_allocate(int id, unsigned long len)
 static pgprot_t phys_mem_access_prot(struct file *file, pgprot_t vma_prot)
 {
 	int id = get_id(file);
+
 #ifdef pgprot_writecombine
 	if (pmem[id].cached == 0 || file->f_flags & O_SYNC)
 		return pgprot_writecombine(vma_prot);
 #endif
+
 #ifdef pgprot_ext_buffered
 	else if (pmem[id].buffered)
 		return pgprot_ext_buffered(vma_prot);
@@ -1216,13 +1220,6 @@ static struct file_operations debug_fops = {
 };
 #endif
 
-#if 0
-static struct miscdevice pmem_dev = {
-	.name = "pmem",
-	.fops = &pmem_fops,
-};
-#endif
-
 int pmem_setup(struct android_pmem_platform_data *pdata,
 	       long (*ioctl)(struct file *, unsigned int, unsigned long),
 	       int (*release)(struct inode *, struct file *))
-- 
1.8.0

